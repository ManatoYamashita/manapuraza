---
alwaysApply: false
description: ビルドとバンドルの方針。Vite/Terser 設定、チャンク分割、解析、Node 要件を定義します。
title: ビルドとバンドル（Vite/Rollup/Terser）
version: 1.0.0
---

# ビルドとバンドル（Vite/Rollup/Terser）

## ツールとバージョン
- Vite 6 / Rollup 内蔵
- `@vitejs/plugin-vue`
- `rollup-plugin-visualizer`（`npm run analyze`）
- Terser 圧縮

## Vite 設定（要点）
```js
export default defineConfig({
  plugins: [vue(), visualizer()],
  define: {
    __VUE_I18N_FULL_INSTALL__: false,
    __VUE_I18N_LEGACY_API__: false,
    __INTLIFY_PROD_DEVTOOLS__: false,
  },
  build: {
    sourcemap: true,
    minify: 'terser',
    terserOptions: {
      compress: {
        drop_console: false,
        drop_debugger: true,
        pure_funcs: ['console.debug', 'console.trace'],
        dead_code: true,
        unused: true,
      },
      mangle: { safari10: true },
      format: { comments: /^!|@preserve|@license|@cc_on|MetaBall:/i },
    },
    rollupOptions: {
      output: {
        manualChunks: {
          vendor: ['vue','vue-router','vue-i18n'],
          vendor_three: ['three'],
          vendor_fontawesome: [
            '@fortawesome/fontawesome-svg-core',
            '@fortawesome/free-solid-svg-icons',
            '@fortawesome/free-brands-svg-icons',
            '@fortawesome/vue-fontawesome'
          ],
          vendor_gsap: ['gsap'],
        }
      }
    }
  },
  server: { historyApiFallback: true },
  assetsInclude: ['robots.txt'],
  resolve: { alias: { '@': fileURLToPath(new URL('./src', import.meta.url)) } }
})
```

## チャンク分割の指針
- UI ランタイム系は `vendor`
- Three.js は `vendor_three`
- Font Awesome は `vendor_fontawesome`
- GSAP は `vendor_gsap`
- 新規大依存を導入する場合は、初回から手動チャンク分割を検討

## ソースマップ
- 本番でも `sourcemap: true`。障害解析の効率を優先

## 解析
- `npm run analyze` で `visualizer` を起動し、重量級依存の検出と削減を行う

## Node.js 要件
- Node 20.19+ もしくは 22.12+（Vite 準拠）

