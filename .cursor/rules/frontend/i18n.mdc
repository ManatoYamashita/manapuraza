---
alwaysApply: false
description: 国際化に関するルール。Vue 3 + Vite 6 環境での i18n 設定と遅延ロードの手順を示す。
title: 国際化（vue-i18n）
version: 1.0.0
---

# 国際化（vue-i18n）

## 設定（`src/main.js`）
- `legacy: false`
- `locale: 'ja'`
- `fallbackLocale: 'en'`
- `globalInjection: true`
- `silentTranslationWarn: true`, `silentFallbackWarn: true`
- `warnHtmlMessage: false`, `escapeParameter: false`

## ロード戦略
- 初期: `ja.json` を同期読み込み
- 後続: `requestIdleCallback` で `en.json` を読み込み、`setLocaleMessage('en', en)`

例
```js
const ja = await import('/locales/ja.json')
const i18n = createI18n({ /* ... */ messages:{ ja: ja.default } })
schedule(async () => {
  const en = await import('/locales/en.json')
  i18n.global.setLocaleMessage('en', en.default)
})
```

## 翻訳追加手順
1. `locales/ja.json`, `locales/en.json` にキーを追加
2. 再ビルド不要（英語は遅延後に反映済み）

## 注意
- `__VUE_I18N_*` は Vite の `define` で最小ビルド設定（`vite.config.js`）

# 国際化（vue-i18n）

## 設定（`src/main.js`）
- `legacy: false`
- `locale: 'ja'`
- `fallbackLocale: 'en'`
- `globalInjection: true`
- `silentTranslationWarn: true`, `silentFallbackWarn: true`
- `warnHtmlMessage: false`, `escapeParameter: false`

## ロード戦略
- 初期: `ja.json` を同期読み込み
- 後続: `requestIdleCallback` で `en.json` を読み込み、`setLocaleMessage('en', en)`

例
```js
const ja = await import('/locales/ja.json')
const i18n = createI18n({ /* ... */ messages:{ ja: ja.default } })
schedule(async () => {
  const en = await import('/locales/en.json')
  i18n.global.setLocaleMessage('en', en.default)
})
```

## 翻訳追加手順
1. `locales/ja.json`, `locales/en.json` にキーを追加
2. 再ビルド不要（英語は遅延後に反映済み）

## 注意
- `__VUE_I18N_*` は Vite の `define` で最小ビルド設定（`vite.config.js`）

