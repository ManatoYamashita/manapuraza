---
alwaysApply: false
description: Vue.js プロジェクトでの新規ページ追加に関する包括的ルール。ルーティング、i18n、ナビゲーション、アニメーションの統合手順を定義します。
title: 新規ページ追加管理
version: 1.0.0
---

# 新規ページ追加管理

## 新規ページ追加チェックリスト

### 1. ページコンポーネント作成
```vue
<!-- src/views/PageName.vue -->
<script setup>
import { onMounted } from 'vue';
import { useI18n } from 'vue-i18n';

const { t } = useI18n();

onMounted(async () => {
  // GSAPを動的インポートして初期バンドルサイズを削減
  const { gsap } = await import('gsap');
  
  // ページ固有のアニメーション
  gsap.from('h1', {
    y: 50,
    opacity: 0,
    duration: 1,
    ease: 'power2.out',
  });
});
</script>

<template>
  <main class="page-name">
    <h1>{{ t('pageName.title') }}</h1>
    <!-- コンテンツ -->
  </main>
</template>

<style lang="css" scoped>
  main.page-name {
    width: 100%;
    margin: 0 auto;
    padding: 1rem;
    pointer-events: all;
    scroll-behavior: smooth;
  }

  h1 {
    font-size: 3rem;
    margin-bottom: 2rem;
    color: #111;
  }

  /* セクション見出しのアンダーライン */
  h2::after {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, rgba(79, 174, 242, 0.8) 0%, rgba(79, 174, 242, 0.2) 100%);
  }

  /* レスポンシブ対応 */
  @media screen and (max-width: 540px) {
    h1 {
      font-size: 2.5rem;
    }
  }
</style>
```

### 2. ルーティング設定更新
```javascript
// src/router/index.js

// コンポーネント追加
const PageNameComponent = () => import('../views/PageName.vue');

// プリロード対象に追加
const preloadComponents = () => {
  schedule(() => {
    PageNameComponent();
    // 他のコンポーネント
  });
};

// ルート追加
const router = createRouter({
  routes: [
    {
      path: '/page-name',
      name: 'pageName',
      component: PageNameComponent,
    },
    // 他のルート
  ]
});
```

### 3. 国際化対応 (必須)
```json
// locales/ja.json
{
  "pageName": {
    "title": "ページタイトル",
    "description": "ページの説明文",
    "section1": "セクション1のタイトル"
  }
}

// locales/en.json
{
  "pageName": {
    "title": "Page Title",
    "description": "Page description",
    "section1": "Section 1 Title"
  }
}
```

### 4. デスクトップナビゲーション更新
```vue
<!-- src/components/Navbar.vue -->
<nav class="default-menu">
  <RouterLink to="/about" class="rlink" :class="{ 'nav-animate': isInitialLoad }">About</RouterLink>
  <RouterLink to="/creatives" class="rlink" :class="{ 'nav-animate': isInitialLoad }">Creatives</RouterLink>
  <RouterLink to="/page-name" class="rlink" :class="{ 'nav-animate': isInitialLoad }">PageName</RouterLink>
</nav>

<style>
/* アニメーション遅延調整 */
.nav-animate:nth-child(1) { animation-delay: 1s; }
.nav-animate:nth-child(2) { animation-delay: 1.2s; }
.nav-animate:nth-child(3) { animation-delay: 1.4s; }
.nav-animate:nth-child(4) { animation-delay: 1.6s; } /* 新規追加 */
</style>
```

### 5. モバイルナビゲーション更新
```vue
<!-- src/components/SpNav.vue -->
<router-link to="/page-name" class="menu-circle-item" aria-label="ページ名">
  <svg class="icons" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" fill="#ffffff">
    <!-- 適切なアイコンのSVGパス -->
  </svg>
</router-link>

<style>
/* アニメーション設定追加 */
.menu-circle-item:nth-child(6) {
  -webkit-transition-duration: 220ms;
  transition-duration: 220ms;
}

.menu-circle-open:checked ~ .menu-circle-item:nth-child(6) {
  -webkit-transition-duration: 400ms;
  transition-duration: 400ms;
  -webkit-transform: translate3d(-2.8rem, -2.8rem, 0);
  transform: translate3d(-2.8rem, -2.8rem, 0);
}
</style>
```

## デザイン統一ルール

### カラーパレット
- プライマリ: `var(--primary-color)` (#4faef2)
- テキスト: `#111` (ダーク)
- アクセント: `rgba(79, 174, 242, 0.8)`

### タイポグラフィ
- h1: 3rem (モバイル: 2.5rem)
- h2: 2rem (アンダーラインエフェクト付き)
- 本文: 1rem～1.2rem

### アニメーション
- GSAPを動的インポート (`const { gsap } = await import('gsap');`)
- フェードイン + Y軸移動のパターン統一
- `ease: 'power2.out'` を基本とする

### レスポンシブ
- `pointer-events: all` でインタラクション有効化
- モバイルファースト設計
- 540px以下でモバイル対応

## 実装後確認項目
- [ ] ページが正常に表示される
- [ ] ルーティングが動作する
- [ ] 両言語で翻訳が表示される  
- [ ] デスクトップナビゲーションが動作する
- [ ] モバイルナビゲーションが動作する
- [ ] アニメーションが正常に実行される
- [ ] レスポンシブデザインが適用されている
- [ ] コンソールエラーが発生していない

## アンチパターン (避けるべき実装)
- 動的パスを使った画像読み込み (Viteバンドル問題)
- i18n翻訳の一言語のみ対応
- デバッグ用メソッドの本番残存
- ナビゲーションアニメーションの設定漏れ
- pointer-eventsの設定忘れ
- GSAPの同期インポート (バンドルサイズ増大)

## 成功パターン
Contact.vueページ実装時の完全な統合例：
1. デザインシステム完全準拠
2. 国際化両言語対応
3. ナビゲーション段階的アニメーション  
4. モバイル・デスクトップ両対応
5. パフォーマンス配慮 (遅延読み込み)