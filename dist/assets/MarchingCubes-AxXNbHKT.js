import{i as t,B as e,j as i,k as s,l as r,V as a,m as o}from"./vendor_three-DsJM6PeA.js";class n extends t{constructor(t,n,c=!1,f=!1,y=1e4){const A=new e;super(A,n),this.isMarchingCubes=!0;const d=this,z=new Float32Array(36),u=new Float32Array(36),p=new Float32Array(36);function m(t,e,i){return t+(e-t)*i}function b(t,e,i,s,r,a,o,n,l,h){const c=(i-o)/(n-o),f=d.normal_cache;z[e+0]=s+c*d.delta,z[e+1]=r,z[e+2]=a,u[e+0]=m(f[t+0],f[t+3],c),u[e+1]=m(f[t+1],f[t+4],c),u[e+2]=m(f[t+2],f[t+5],c),p[e+0]=m(d.palette[3*l+0],d.palette[3*h+0],c),p[e+1]=m(d.palette[3*l+1],d.palette[3*h+1],c),p[e+2]=m(d.palette[3*l+2],d.palette[3*h+2],c)}function w(t,e,i,s,r,a,o,n,l,h){const c=(i-o)/(n-o),f=d.normal_cache;z[e+0]=s,z[e+1]=r+c*d.delta,z[e+2]=a;const y=t+3*d.yd;u[e+0]=m(f[t+0],f[y+0],c),u[e+1]=m(f[t+1],f[y+1],c),u[e+2]=m(f[t+2],f[y+2],c),p[e+0]=m(d.palette[3*l+0],d.palette[3*h+0],c),p[e+1]=m(d.palette[3*l+1],d.palette[3*h+1],c),p[e+2]=m(d.palette[3*l+2],d.palette[3*h+2],c)}function M(t,e,i,s,r,a,o,n,l,h){const c=(i-o)/(n-o),f=d.normal_cache;z[e+0]=s,z[e+1]=r,z[e+2]=a+c*d.delta;const y=t+3*d.zd;u[e+0]=m(f[t+0],f[y+0],c),u[e+1]=m(f[t+1],f[y+1],c),u[e+2]=m(f[t+2],f[y+2],c),p[e+0]=m(d.palette[3*l+0],d.palette[3*h+0],c),p[e+1]=m(d.palette[3*l+1],d.palette[3*h+1],c),p[e+2]=m(d.palette[3*l+2],d.palette[3*h+2],c)}function g(t){const e=3*t;0===d.normal_cache[e]&&(d.normal_cache[e+0]=d.field[t-1]-d.field[t+1],d.normal_cache[e+1]=d.field[t-d.yd]-d.field[t+d.yd],d.normal_cache[e+2]=d.field[t-d.zd]-d.field[t+d.zd])}function v(t,e,i,s,r){const a=s+1,o=s+d.yd,n=s+d.zd,c=a+d.yd,f=a+d.zd,y=s+d.yd+d.zd,A=a+d.yd+d.zd;let m=0;const v=d.field[s],F=d.field[a],_=d.field[o],C=d.field[c],q=d.field[n],P=d.field[f],j=d.field[y],x=d.field[A];v<r&&(m|=1),F<r&&(m|=2),_<r&&(m|=8),C<r&&(m|=4),q<r&&(m|=16),P<r&&(m|=32),j<r&&(m|=128),x<r&&(m|=64);const B=l[m];if(0===B)return 0;const I=d.delta,S=t+I,k=e+I,D=i+I;1&B&&(g(s),g(a),b(3*s,0,r,t,e,i,v,F,s,a)),2&B&&(g(a),g(c),w(3*a,3,r,S,e,i,F,C,a,c)),4&B&&(g(o),g(c),b(3*o,6,r,t,k,i,_,C,o,c)),8&B&&(g(s),g(o),w(3*s,9,r,t,e,i,v,_,s,o)),16&B&&(g(n),g(f),b(3*n,12,r,t,e,D,q,P,n,f)),32&B&&(g(f),g(A),w(3*f,15,r,S,e,D,P,x,f,A)),64&B&&(g(y),g(A),b(3*y,18,r,t,k,D,j,x,y,A)),128&B&&(g(n),g(y),w(3*n,21,r,t,e,D,q,j,n,y)),256&B&&(g(s),g(n),M(3*s,24,r,t,e,i,v,q,s,n)),512&B&&(g(a),g(f),M(3*a,27,r,S,e,i,F,P,a,f)),1024&B&&(g(c),g(A),M(3*c,30,r,S,k,i,C,x,c,A)),2048&B&&(g(o),g(y),M(3*o,33,r,t,k,i,_,j,o,y)),m<<=4;let R,V,X,Y=0,Z=0;for(;-1!=h[m+Z];)R=m+Z,V=R+1,X=R+2,U(z,u,p,3*h[R],3*h[V],3*h[X]),Z+=3,Y++;return Y}function U(t,e,i,s,r,a){const o=3*d.count;if(d.positionArray[o+0]=t[s],d.positionArray[o+1]=t[s+1],d.positionArray[o+2]=t[s+2],d.positionArray[o+3]=t[r],d.positionArray[o+4]=t[r+1],d.positionArray[o+5]=t[r+2],d.positionArray[o+6]=t[a],d.positionArray[o+7]=t[a+1],d.positionArray[o+8]=t[a+2],!0===d.material.flatShading){const t=(e[s+0]+e[r+0]+e[a+0])/3,i=(e[s+1]+e[r+1]+e[a+1])/3,n=(e[s+2]+e[r+2]+e[a+2])/3;d.normalArray[o+0]=t,d.normalArray[o+1]=i,d.normalArray[o+2]=n,d.normalArray[o+3]=t,d.normalArray[o+4]=i,d.normalArray[o+5]=n,d.normalArray[o+6]=t,d.normalArray[o+7]=i,d.normalArray[o+8]=n}else d.normalArray[o+0]=e[s+0],d.normalArray[o+1]=e[s+1],d.normalArray[o+2]=e[s+2],d.normalArray[o+3]=e[r+0],d.normalArray[o+4]=e[r+1],d.normalArray[o+5]=e[r+2],d.normalArray[o+6]=e[a+0],d.normalArray[o+7]=e[a+1],d.normalArray[o+8]=e[a+2];if(d.enableUvs){const e=2*d.count;d.uvArray[e+0]=t[s+0],d.uvArray[e+1]=t[s+2],d.uvArray[e+2]=t[r+0],d.uvArray[e+3]=t[r+2],d.uvArray[e+4]=t[a+0],d.uvArray[e+5]=t[a+2]}d.enableColors&&(d.colorArray[o+0]=i[s+0],d.colorArray[o+1]=i[s+1],d.colorArray[o+2]=i[s+2],d.colorArray[o+3]=i[r+0],d.colorArray[o+4]=i[r+1],d.colorArray[o+5]=i[r+2],d.colorArray[o+6]=i[a+0],d.colorArray[o+7]=i[a+1],d.colorArray[o+8]=i[a+2]),d.count+=3}this.enableUvs=c,this.enableColors=f,this.init=function(t){this.resolution=t,this.isolation=80,this.size=t,this.size2=this.size*this.size,this.size3=this.size2*this.size,this.halfsize=this.size/2,this.delta=2/this.size,this.yd=this.size,this.zd=this.size2,this.field=new Float32Array(this.size3),this.normal_cache=new Float32Array(3*this.size3),this.palette=new Float32Array(3*this.size3),this.count=0;const e=3*y;this.positionArray=new Float32Array(3*e);const o=new i(this.positionArray,3);o.setUsage(s),A.setAttribute("position",o),this.normalArray=new Float32Array(3*e);const n=new i(this.normalArray,3);if(n.setUsage(s),A.setAttribute("normal",n),this.enableUvs){this.uvArray=new Float32Array(2*e);const t=new i(this.uvArray,2);t.setUsage(s),A.setAttribute("uv",t)}if(this.enableColors){this.colorArray=new Float32Array(3*e);const t=new i(this.colorArray,3);t.setUsage(s),A.setAttribute("color",t)}A.boundingSphere=new r(new a,1)},this.addBall=function(t,e,i,s,r,a){const n=Math.sign(s);s=Math.abs(s);const l=!(null==a);let h=new o(t,e,i);if(l)try{h=a instanceof o?a:Array.isArray(a)?new o(Math.min(Math.abs(a[0]),1),Math.min(Math.abs(a[1]),1),Math.min(Math.abs(a[2]),1)):new o(a)}catch(x){h=new o(t,e,i)}const c=this.size*Math.sqrt(s/r),f=i*this.size,y=e*this.size,A=t*this.size;let d=Math.floor(f-c);d<1&&(d=1);let z=Math.floor(f+c);z>this.size-1&&(z=this.size-1);let u=Math.floor(y-c);u<1&&(u=1);let p=Math.floor(y+c);p>this.size-1&&(p=this.size-1);let m=Math.floor(A-c);m<1&&(m=1);let b,w,M,g,v,U,F,_,C,q,P,j=Math.floor(A+c);for(j>this.size-1&&(j=this.size-1),M=d;M<z;M++)for(v=this.size2*M,_=M/this.size-i,C=_*_,w=u;w<p;w++)for(g=v+this.size*w,F=w/this.size-e,q=F*F,b=m;b<j;b++)if(U=b/this.size-t,P=s/(1e-6+U*U+q+C)-r,P>0){this.field[g+b]+=P*n;const t=Math.sqrt((b-A)*(b-A)+(w-y)*(w-y)+(M-f)*(M-f))/c,e=1-t*t*t*(t*(6*t-15)+10);this.palette[3*(g+b)+0]+=h.r*e,this.palette[3*(g+b)+1]+=h.g*e,this.palette[3*(g+b)+2]+=h.b*e}},this.addPlaneX=function(t,e){const i=this.size,s=this.yd,r=this.zd,a=this.field;let o,n,l,h,c,f,y,A=i*Math.sqrt(t/e);for(A>i&&(A=i),o=0;o<A;o++)if(f=o/i,h=f*f,c=t/(1e-4+h)-e,c>0)for(n=0;n<i;n++)for(y=o+n*s,l=0;l<i;l++)a[r*l+y]+=c},this.addPlaneY=function(t,e){const i=this.size,s=this.yd,r=this.zd,a=this.field;let o,n,l,h,c,f,y,A,d=i*Math.sqrt(t/e);for(d>i&&(d=i),n=0;n<d;n++)if(f=n/i,h=f*f,c=t/(1e-4+h)-e,c>0)for(y=n*s,o=0;o<i;o++)for(A=y+o,l=0;l<i;l++)a[r*l+A]+=c},this.addPlaneZ=function(t,e){const i=this.size,s=this.yd,r=this.zd,a=this.field;let o,n,l,h,c,f,y,A,d=i*Math.sqrt(t/e);for(d>i&&(d=i),l=0;l<d;l++)if(f=l/i,h=f*f,c=t/(1e-4+h)-e,c>0)for(y=r*l,n=0;n<i;n++)for(A=y+n*s,o=0;o<i;o++)a[A+o]+=c},this.setCell=function(t,e,i,s){const r=this.size2*i+this.size*e+t;this.field[r]=s},this.getCell=function(t,e,i){const s=this.size2*i+this.size*e+t;return this.field[s]},this.blur=function(t=1){const e=this.field,i=e.slice(),s=this.size,r=this.size2;for(let a=0;a<s;a++)for(let o=0;o<s;o++)for(let n=0;n<s;n++){const l=r*n+s*o+a;let h=i[l],c=1;for(let e=-1;e<=1;e+=2){const l=e+a;if(!(l<0||l>=s))for(let e=-1;e<=1;e+=2){const a=e+o;if(!(a<0||a>=s))for(let e=-1;e<=1;e+=2){const o=e+n;if(o<0||o>=s)continue;c++,h+=t*(i[r*o+s*a+l]-h)/c}}}e[l]=h}},this.reset=function(){for(let t=0;t<this.size3;t++)this.normal_cache[3*t]=0,this.field[t]=0,this.palette[3*t]=this.palette[3*t+1]=this.palette[3*t+2]=0},this.update=function(){this.count=0;const t=this.size-2;for(let e=1;e<t;e++){const i=this.size2*e,s=(e-this.halfsize)/this.halfsize;for(let e=1;e<t;e++){const r=i+this.size*e,a=(e-this.halfsize)/this.halfsize;for(let e=1;e<t;e++){v((e-this.halfsize)/this.halfsize,a,s,r+e,this.isolation)}}}this.geometry.setDrawRange(0,this.count),A.getAttribute("position").needsUpdate=!0,A.getAttribute("normal").needsUpdate=!0,this.enableUvs&&(A.getAttribute("uv").needsUpdate=!0),this.enableColors&&(A.getAttribute("color").needsUpdate=!0),this.count},this.init(t)}}const l=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]),h=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);export{n as MarchingCubes,l as edgeTable,h as triTable};
//# sourceMappingURL=MarchingCubes-AxXNbHKT.js.map
